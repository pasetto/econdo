generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  phone  String
  password  String
  isAdmin   Boolean    @default(false)
  isVerified Boolean   @default(false)
  avatar    String
  accessToken String
  refreshToken String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  // Contacts  Contacts[]
  groups    Group[] 
  groupMemberUser  GroupMember[] @relation("user")
  groupMemberFriend  GroupMember[] @relation("friend")
  @@map("users")
}

// model Contacts {
//   id     String @id @default(uuid())
//   name   String
//   email  String
//   phone  String
//   userId String
//   user   User   @relation(fields: [userId], references: [id])

//   @@map("contacts")
// }


model Group {
  id        String     @id @default(uuid())
  name      String
  drawDate  DateTime
  deliveryDate DateTime
  deliveryPlace String
  status    String

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  authorId  String
  // Contacts  Contacts[]
  // user      User
  // userId    String
  user      User   @relation(fields: [authorId], references: [id])
  GroupMember  GroupMember[]
  @@map("groups")
}


model GroupMember {
  id        String     @id @default(uuid())
  groupId   String
  userId    String
  friendId  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  group     Group   @relation(fields: [groupId], references: [id])
  user      User    @relation("user", fields: [userId], references: [id])
  friend    User    @relation("friend", fields: [friendId], references: [id])
  @@map("group_members")
}